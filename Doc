PROI - Projekt 3 - Zadanie 3.5 Prosty edytor graficzny - Michał Parafiniuk

Treść zadania:
"Przyjąć następujące założenia:
	Zaproponować sposób przechowywania punktów.
	W oparciu o zbiór punktów zaproponować sposoby reprezentacji obiektów 2D
	Zaproponować podstawowy zestaw operacji, wykonywanych dla obiektów graficznych (np. przesuwanie, skalowanie itd.)"

Założenia projektu:
Program jest prostym konsolowym edytorem graficznym do figur 2D, przedstawionych za pomocą punktów. Program pozwala nanosić wierzchołki figur na układ współrzędnych kartezjańskich i rysuje prostokąty, linie i punkty. Generowany układ kartezjański a) może być przeskalowany tak, żeby figury były jak największe, b) skalowalny w rozmiarze (ma wielkość w pionie i w poziomie zależną od podanych argumentów.

Opis funkcjonalności:
Działanie programu opiera się na tablicach, na które użytkownik może nanosić kształty. Kształty nie zostają od razu wdrukowane w tablicę (jak np. w MS Paint), ale pozostają jako niezależne obiekty, które można modyfikować. Możliwe modyfikacje kształtu: przesunięcie, przeskalowanie o wartość rzeczywistą, odbicie lustrzane w pionie i w poziomie (względem osi przechodzącej przez środek kształtu), zmiana "koloru" (czyli znaku, przy pomocy którego rysowany jest kształt). Każdą tablicę i każdy kształt można zapisać do pliku i wczytać z pliku tesktowego o odpowiednim formacie. Program pozwala na dowolną ilość niezależnych tablic i dowolną ilość kształtów w każdej tablicy.
Za obsługę całości odpowiada interfejs konsolowy, który przeprowadza interakcje z użytkownikiem na zasadzie wybierania pozycji z menu i przyjmowania wartości argumentów poszczególnych funkcji oraz rysuje tablice w znakach ASCII.

Opis szczegółowy:
Struktura programu jest podzielona na interfejs i niezależną od niego logikę programu. Do części logicznej przynależą klasy: Canvas, będąca reprezentacją tablicy i Shape, będąca reprezentacją kształtu oraz dziedziczące po niej klasy Rectangle, Line i Dot. Dodatkową strukturą pomocniczą jest struktura Point, która jest reprezentacją pojedynczego punktu (czyli zawiera dwie składowe rzeczywiste x i y). Klasa Shape (i każda dziedzicząca po niej) ma prywatny wektor struktur Point i znak graficzny (char), będący jej kolorem oraz publiczne metody, stanowiące interfejs odpowiadający za modyfikacje obiektu (różnie realizowane w zależności od klasy). Obiekty klasy Shape są rysowane tylko w postaci pojedynczych punktów na wierzchołkach, Rectangle i Line są rysowane w postaci linii, a Dot w postaci pojedynczego punktu (jednak różni się od struktury Point tym, że ma kolor i interfejs umożliwiający np. przesuwanie).
Klasa Canvas zawiera prywatny wektor wszystkich przynależnych do niej kształtów oraz metody umożliwiające rysowanie tablicy, dodawanie kształtów z pliku i ich usuwanie, a także zapisanie kształtów i tablicy do pliku.
Klasa Interface nie ma żadnych wartości składowych, zawiera za to metody obsługujące interakcje z użytkownikiem. Główną metodą, z której wywoływane są wszystkie inne, jest metoda Interface::menu typu bool, która zwraca wartość prawdziwą, jeśli chcemy kontynuować działanie programu lub fałsz, jeśli użytkownik chce zakończyć pracę z programem. Pozostałe metody odpowiadają za przyjęcie decyzji o operacjach od użytkownika i przekazanie ich do części logicznej, poza metodami pomocniczymi. Do metod pomocniczych należą: void drawShape, która drukuje miniaturkę kształtu poprzez stworzenie nowej tablicy tymczasowej, dodanie kształtu do tej tablicy, po czym wydrukowanie tej tablicy; oraz int chooseShape i int chooseCanvas, które odpowiadają za poprawne przyjęcie od użytkownika wyboru jednego z kształtów lub jednej z tablic. W konstruktorze i destruktorze obiektów klasy Interface jest instrukcja wypisania wiadomości startowej/końcowej.

W głównej funkcji programu zawiera się inicjalizacja programu (stworzenie instancji interfesju oraz stworzenie wektora wszystkich tablic, po czym dodanie do niego jednej pustej tablicy domyślnej) i pętla menu, uzależniona od wyniku funkcji Interface::menu.

Pliki kształtów powinny zawierać jedną liczbę naturalną n, mówiącą o liczbie wierzchołków figury, a potem 2n liczb rzeczywistych, które odpowiadają parami za poszczególne współrzędne pojedynczego punktu (x i y). W przypadku większej liczby punktów program wczyta tyle, ile zostało zadeklarowane na początku pliku, w przypadku mniejszej liczby punktów lub błędu wczytania zwróci wyjątek i poda numer argumentu, którego już nie udało mu się wczytać, po czym poprosi o poprawienie pliku lub podanie nazwy innego pliku.
